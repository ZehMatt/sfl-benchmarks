# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr and automatically regenerate CMakeLists.txt
	include(cmkr.cmake OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)

	# Create a configure-time dependency on cmake.toml to improve IDE support
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

# Variables
set(INSTALL_GTEST OFF)
set(BUILD_GMOCK OFF)
set(BENCHMARK_ENABLE_TESTING OFF)
set(BENCHMARK_ENABLE_INSTALL OFF)
set(BENCHMARK_USE_BUNDLED_GTEST OFF)

project(sfl-test)

include(FetchContent)

# Fix warnings about DOWNLOAD_EXTRACT_TIMESTAMP
if(POLICY CMP0135)
	cmake_policy(SET CMP0135 NEW)
endif()
message(STATUS "Fetching sfl (4a9fb569778d492158e1325a81f1d58b4ca7e63a)...")
FetchContent_Declare(sfl SYSTEM
	GIT_REPOSITORY
		"https://github.com/slavenf/sfl-library.git"
	GIT_TAG
		4a9fb569778d492158e1325a81f1d58b4ca7e63a
)
FetchContent_MakeAvailable(sfl)

message(STATUS "Fetching GBenchmark (v1.6.1)...")
FetchContent_Declare(GBenchmark SYSTEM
	GIT_REPOSITORY
		"https://github.com/google/benchmark"
	GIT_TAG
		v1.6.1
)
FetchContent_MakeAvailable(GBenchmark)

# Target: sfl-test
set(sfl-test_SOURCES
	"src/sfl-test/benchmark_deque.cpp"
	"src/sfl-test/benchmark_segmented_devector.cpp"
	"src/sfl-test/benchmark_segmented_vector.cpp"
	"src/sfl-test/benchmark_vector.cpp"
	"src/sfl-test/main.cpp"
	"src/sfl-test/common.hpp"
	cmake.toml
)

add_executable(sfl-test)

target_sources(sfl-test PRIVATE ${sfl-test_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${sfl-test_SOURCES})

target_compile_features(sfl-test PRIVATE
	cxx_std_17
)

target_link_libraries(sfl-test PRIVATE
	sfl::sfl
	benchmark::benchmark
)

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT sfl-test)
endif()
